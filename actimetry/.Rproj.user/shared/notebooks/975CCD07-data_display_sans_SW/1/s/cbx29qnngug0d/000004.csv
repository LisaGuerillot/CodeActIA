"0","## This is the same code that in the pipeline and the required package functions, but we need to copy/paste because we can not use them directly because we have to add some columns on the table in order to be able to display the results. "
"0","## We re write the function of immobility filtering by adding some lines to build a table with a column indicating ""immobility"" or ""motion"", to display on a graphe the data which are immobility and the data wich are motion."
"0","df <- resampled_accelerations"
"0","df$immobility <- ""motion""  ## To display later in different colors the data corresponding to motion"
"0","df[abs(df$overall_left_acc) + abs(df$overall_right_acc) < immobility_threshold, ""immobility""] <- ""immobility"""
"0",""
"0","immobility_length_threshold <- immobility_length_threshold * resampling_frequency"
"0","row_threshold <- time_threshold * resampling_frequency"
"0",""
"0","immo_successive <- diff(which(df$immobility == ""immobility"")) #We compute the gap between the index of the lines where df$immobility = ""immobility"", which allows to know how much successive immobility their are."
"0","counter <- which(df$immobility == ""immobility"")[1]"
"0","indexes_to_change <- c() # List of the index of the data which correspond to ""motion"""
"0","i <- 1"
"0","while (i < length(immo_successive)){"
"0","  if (immo_successive[i] == 1){ "
"0","    l <- i"
"0","    nb_immo <- 0"
"0","    index <- c()"
"0","    while((l< length(immo_successive)) && (immo_successive[l] == 1)){ #Count of the immobility successive"
"0","      index <- c(index, counter + nb_immo)"
"0","      nb_immo <- nb_immo + 1"
"0","      l <- l + 1"
"0","    }"
"0","    index <- c(index, counter + nb_immo) #Add the beginning of the motion : start when the gap between two immobility is not 1 anymore. That tells us that the immobility are no longer immobility so this is motion"
"0","    if (nb_immo < immobility_length_threshold){ ## If their is enough immobility successive"
"0","      indexes_to_change <- c(indexes_to_change, index)"
"0","    }"
"0","    counter <- counter + nb_immo + immo_successive[l]"
"0","    i <- l + 1"
"0","  } else {"
"0","    counter <- counter + immo_successive[i]"
"0","    i <- i + 1"
"0","  }"
"0","}"
"0",""
"0","for (ind in indexes_to_change){"
"0","  df$immobility[ind] <- ""motion"" #Create a column which associate to each acceleration value the noun ""immobility"" or ""motion"""
"0","}"
"0",""
"0","########### Display of the data by highlighting the immobility data and the motion data"
"0",""
"0","## Creation of the ordinate"
"0","ordinate_immo <- abs(df$overall_left_acc) + abs(df$overall_right_acc)"
"0",""
"0","##Creation of the dataframe"
"0","df_immo <- data.frame(abscissa, ordinate_immo, df$immobility)"
"0","colnames(df_immo) <-c(""Time"", ""Acceleration"", ""Immobility"")"
"0","ymax_immo <- max(ordinate_immo)"
"0",""
"0","## Display"
"0","ggplot(df_immo) + geom_point(aes(Time, Acceleration, color = Immobility, shape = Immobility, size = Immobility)) + "
"0","  scale_shape_manual(values=c(18, 20)) + "
"0","  scale_color_manual(values=c(""orange"", ""blue"")) +"
"0","  scale_size_manual(values=c(0.2, 0.2)) +"
"0","  xlab(""Time (s)"") + ylab(""Sum of absolute components of wrist acceleration (g)"") + "
"0","  ylim(0, ymax_immo)"
"0",""
