"0","##This script is just as the pipeline, where we add the classification with a forest function, to add some lines inside it. The added lines are useful to display the different labels of the data."
"0","predicted_labels <- c()"
"0","lab_or_no_lab <- c()"
"0","name_lab <- c()"
"0","ind_remove <- c()"
"0","ind_beg_seg_filter <- which(filtered_data$start_mov == - 1, arr.ind = TRUE)"
"0","if (1%in%ind_beg_seg_filter){"
"0","  ind_end_seg_filter <- ind_beg_seg_filter[-1] - 1"
"0","  if(length(filtered_data$overall_left_acc) - ind_beg_seg_filter[length(ind_beg_seg_filter)] > 3){"
"0","    ind_end_seg_filter <- c(ind_end_seg_filter, length(filtered_data$overall_left_acc))"
"0","  }"
"0","} else {"
"0","  ind_end_seg_filter <- ind_beg_seg_filter - 1"
"0","}"
"0",""
"0","for (k in 1 : min(length(ind_beg_seg_filter), length(ind_end_seg_filter))){"
"0","  left_segment_data <- filtered_data[ind_beg_seg_filter[k] : ind_end_seg_filter[k], 2]"
"0","  right_segment_data <- filtered_data[ind_beg_seg_filter[k] : ind_end_seg_filter[k], 3]"
"0","  width <- ind_end_seg_filter[k] - ind_beg_seg_filter[k] + 1"
"0","  if (width > 1){"
"0","    descriptors <- compute_descriptors_window(left_segment_data, right_segment_data, width, descriptors_database, criteria = ""forest"")"
"0","    if (!(TRUE%in%is.na(descriptors))){"
"0","      descriptors_database <- descriptors_database[sample(nrow(descriptors_database)), ]"
"0","      label_movements <- descriptors_database$label_movements"
"0","      descriptors_database$label_movements <- as.factor(descriptors_database$label_movements)"
"0","      train <- descriptors_database"
"0","      test <- descriptors"
"0","      forest <- randomForest(label_movements ~ ., train, ntree = tree_number)"
"0","      preds <- predict(forest, test, type = ""prob"")"
"0",""
"0","    if(max(preds) < no_labelled_threshold){    #Determine if we can labelled or not the data"
"0","      predicted_label <- ""no_labelled_motion"""
"0","      lab_or_no_lab <- c(lab_or_no_lab, rep(""no labelled"", width)) #Write in a column ""no labelled"" if we can not labelled the data "
"0","      name_lab <- c(name_lab, rep(""no labelled"", width))"
"0","    } else {"
"0","      predicted_label <- label_movements[which.max(preds)]"
"0","      lab_or_no_lab <- c(lab_or_no_lab, rep(""labelled"", width))"
"0","      labs <- as.character(label_movements[which.max(preds)])"
"0","      name_lab <- c(name_lab, rep(labs, width))"
"0","  }"
"0","    }"
"0","    predicted_labels <- rbind(predicted_labels, predicted_label)"
"0","  } else {"
"0","    ind_remove <- c(ind_remove, ind_beg_seg_filter[k])"
"0","    lab_or_no_lab <- c(lab_or_no_lab, ""no labelled"")"
"0","    name_lab <- c(name_lab, ""no labelled"")"
"0","  }"
"0","}"
"0","if(length(filtered_data$overall_left_acc) - ind_beg_seg_filter[length(ind_beg_seg_filter)] < 4){"
"0","  lab_or_no_lab <- c(lab_or_no_lab, rep(""no labelled"", length(filtered_data$overall_left_acc) - ind_beg_seg_filter[length(ind_beg_seg_filter)] + 1))"
"0","  name_lab <- c(name_lab, rep(""no labelled"", length(filtered_data$overall_left_acc) - ind_beg_seg_filter[length(ind_beg_seg_filter)] + 1))"
"0","  for (j in ind_beg_seg_filter[length(ind_beg_seg_filter)] : length(filtered_data$overall_left_acc)){"
"0","    ind_remove <- c(ind_remove, j)"
"0","  }"
"0","}"
"0",""
"0","filtered_data_with_no_lab <- cbind(filtered_data, lab_or_no_lab, name_lab)"
"0","filtered_data_with_no_lab <- filtered_data_with_no_lab[-ind_remove, ]"
"0",""
"0","## Display lab or no lab "
"0",""
"0","overall_left_acc <- filtered_data_with_no_lab$overall_left_acc"
"0","overall_right_acc <- filtered_data_with_no_lab$overall_right_acc"
"0",""
"0","ordinate_labelled <- abs(filtered_data_with_no_lab$overall_left_acc) + abs(filtered_data_with_no_lab$overall_right_acc)"
"0","abscissa_labelled <- filtered_data_with_no_lab$abscissa"
"0","df_labelled <- data.frame(abscissa_labelled, ordinate_labelled, filtered_data_with_no_lab$lab_or_no_lab)"
"0","colnames(df_labelled) <-c(""Time"", ""Acceleration"", ""Labelled"")"
"0","ymax_labelled <- max(ordinate_labelled)"
"0",""
"0","## Display"
"0","ggplot(df_labelled) + geom_point(aes(Time, Acceleration, color = Labelled, shape = Labelled, size = Labelled)) + "
"0","  scale_shape_manual(values=c(18, 20)) + "
"0","  scale_color_manual(values=c(""orange"", ""blue"")) +"
"0","  scale_size_manual(values=c(0.2, 0.2)) +"
"0","  xlab(""Time (s)"") + ylab(""Sum of absolute components of wrist acceleration (g)"") + "
"0","  ylim(0, ymax_labelled) "
